/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-08-29 03:56:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.com.popup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;

public final class pswdChange_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.cbiz.Box obox = null;
      obox = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("obox", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (obox == null){
        obox = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("obox", obox, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.ubiz.mapper.ent.SesUserEntity uSesEnt = null;
      synchronized (session) {
        uSesEnt = (egovframework.ubiz.mapper.ent.SesUserEntity) _jspx_page_context.getAttribute("uSesEnt", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (uSesEnt == null){
          uSesEnt = new egovframework.ubiz.mapper.ent.SesUserEntity();
          _jspx_page_context.setAttribute("uSesEnt", uSesEnt, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!-- 비밀번호 변경 -->\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("\tfunction goPswdChange() {\r\n");
      out.write("\t\tif (formValidate(\"#pForm\")) {\r\n");
      out.write("\t\t\tif(document.pForm.new_pswd.value.length < 4) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호는 4자리 이상이어야 합니다.\");\r\n");
      out.write("\t\t\t\tdocument.main.new_pswd.focus();\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}else if(document.pForm.new_pswd.value != document.pForm.re_new_pswd.value) {\r\n");
      out.write("\t\t\t    alert(\"비밀번호 확인이 틀렸습니다.\");\r\n");
      out.write("\t\t\t    document.pForm.re_new_pswd.focus();\r\n");
      out.write("\t\t\t    return;\r\n");
      out.write("\t\t\t}else if(document.pForm.old_pswd.value == document.pForm.new_pswd.value) {\r\n");
      out.write("\t\t\t    alert(\"변경전 비밀번호와 변경후 비밀번호가 동일합니다.\");\r\n");
      out.write("\t\t\t    document.pForm.new_pswd.focus();\r\n");
      out.write("\t\t\t    return;\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(confirm('변경하시겠습니까?')) {\r\n");
      out.write("\t\t\t\tajaxSubmitForm(\"/popup/fd/pswdChange_update.do\",\"#pForm\", function(rtn) {\r\n");
      out.write("\t\t\t\t\tif(rtn.isOk == \"Y\") {\r\n");
      out.write("\t\t\t\t\t\talert('변경되었습니다.');\r\n");
      out.write("\t\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t\t}else {\r\n");
      out.write("\t\t\t\t\t\talert(rtn.errMsg);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction goPswdInit() {\r\n");
      out.write("\t\tif(confirm('비밀번호를 초기화하시겠습니까?')) {\r\n");
      out.write("\t\t\tajaxSubmitForm(\"/insa/fd/ins01002_pswd_init.do\",\"#pForm\", function(rtn) {\r\n");
      out.write("\t\t\t\tif(rtn.isOk == \"Y\") {\r\n");
      out.write("\t\t\t\t\talert('초기화되었습니다.');\r\n");
      out.write("\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t}else {\r\n");
      out.write("\t\t\t\t\talert(rtn.errMsg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$(\".page-logo-text\").html(\"비밀번호 변경\");\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form id=\"pForm\" name=\"pForm\" method=\"post\" action=\"\" class=\"fType\" style=\"margin:0px\">\r\n");
      out.write("<input type=\"hidden\" name=\"empl_no\" value=\"");
      out.print(box.get("empl_no"));
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"nextUrl\" value=\"");
      out.print(box.get("nextUrl"));
      out.write("\">\r\n");
      out.write("\t<div class=\"table-scrollable\">\t\r\n");
      out.write("\t\t<table class=\"table table-view table-bordered\">\r\n");
      out.write("\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t<col style=\"width:22%;\">\r\n");
      out.write("\t\t\t\t<col style=\"width:28%;\">\r\n");
      out.write("\t\t\t\t<col style=\"width:22%;\">\r\n");
      out.write("\t\t\t\t<col style=\"width:28%;\">\r\n");
      out.write("\t\t\t</colgroup>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t<td class=\"td-head\">사용자 ID</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(obox.get("user_id"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"td-head\">성명</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(obox.get("empl_nm"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t<td class=\"td-head\">변경전 비밀번호</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\"><input type=\"password\" name=\"old_pswd\" maxlength=\"20\" class=\"form-control required\" title=\"변경전 비밀번호\" style=\"width:100px\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t<td class=\"td-head\">변경후 비밀번호</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"new_pswd\" maxlength=\"20\" class=\"form-control required\" title=\"변경후 비밀번호\" style=\"width:100px\"></td>\r\n");
      out.write("\t\t\t\t\t<td class=\"td-head\">비밀번호 확인</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"re_new_pswd\" maxlength=\"20\" class=\"form-control required\" title=\"변경후 비밀번호 확인\" style=\"width:100px\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"table-bottom-control\">\r\n");
      out.write("\t\t<span class=\"f-right\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn dark\" onClick=\"goPswdChange()\"><img src=\"/com/img/ico_btn_edit.png\">비밀번호 변경</button>\r\n");
      out.write("\t\t");
 if(uSesEnt.use_auth.startsWith("S")) { 
      out.write("\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn dark\" onClick=\"goPswdInit()\"><img src=\"/com/img/ico_btn_edit.png\">비밀번호 초기화</button>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
