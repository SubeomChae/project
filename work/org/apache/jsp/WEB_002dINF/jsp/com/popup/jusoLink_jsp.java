/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-09-03 03:08:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.com.popup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;

public final class jusoLink_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

	public String fn_addr_col(String p_addr, int p_index) throws Exception {
		String v_rtn = "";
		String v_addr = StringUtil.rtrim(StringUtil.ltrim(p_addr));
		int v_length = v_addr.length();
		v_addr = StringUtil.replace(v_addr, "  ", " ");
		while(true) {
			if(v_length == v_addr.length()) { break; }
			v_length = v_addr.length();
			v_addr = StringUtil.replace(v_addr, "  ", " ");
		}
		v_addr = StringUtil.replace(v_addr, "세종특별자치시 ", "세종특별자치시  ");
		String addr[] = StringUtil.split(v_addr+"   ", " ", true);
		if(p_index == 1) {
			v_rtn = addr[0];
		}else if(p_index == 2) {
			if(addr[2].endsWith("구") || addr[2].endsWith("군") || addr[2].endsWith("리")) {
				v_rtn = StringUtil.rtrim(addr[1] + " " + addr[2]);
			}else {
				v_rtn = addr[1];
			}
		}else if(p_index == 3) {
			if(addr[2].endsWith("구") || addr[2].endsWith("군") || addr[2].endsWith("리")) {
				v_rtn = addr[3];
			}else {
				v_rtn = addr[2];
			}
		}else if(p_index == 4) {
			if(addr[2].endsWith("구") || addr[2].endsWith("군") || addr[2].endsWith("리")) {
				for(int i=4; i < addr.length; i++) { 
					if(!addr[i].equals("")) { v_rtn += addr[i] + " "; }
				}
			}else {
				for(int i=3; i < addr.length; i++) { 
					if(!addr[i].equals("")) { v_rtn += addr[i] + " "; }
				}
			}
		}
        return StringUtil.rtrim(v_rtn);
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
 
	request.setCharacterEncoding("UTF-8");  //한글깨지면 주석제거
	//request.setCharacterEncoding("EUC-KR");  //해당시스템의 인코딩타입이 EUC-KR일경우에
	String inputYn = box.get("inputYn"); 
	String roadFullAddr = box.get("roadFullAddr"); 
	String roadAddrPart1 = box.get("roadAddrPart1"); 
	String roadAddrPart2 = box.get("roadAddrPart2"); 
	String engAddr = box.get("engAddr"); 
	String jibunAddr = box.get("jibunAddr"); 
	String zipNo = box.get("zipNo"); 
	String addrDetail = box.get("addrDetail"); 
	String admCd = box.get("admCd");
	String rnMgtSn = box.get("rnMgtSn");
	String bdMgtSn  = box.get("bdMgtSn");

      out.write("\r\n");
      out.write("<title>우편번호 찾기</title>\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tvar returnUrl = location.href;\r\n");
      out.write("\t\tvar confmKey = \"U01TX0FVVEgyMDE1MDgxOTE3MjIwOQ==\";\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\tvar inputYn= \"");
      out.print(inputYn);
      out.write("\";\r\n");
      out.write("\t\tif(inputYn != \"Y\"){\r\n");
      out.write("\t\t\tdocument.form1.confmKey.value = confmKey;\r\n");
      out.write("\t\t\tdocument.form1.returnUrl.value = returnUrl;\r\n");
      out.write("\t\t\tdocument.form1.action=\"http://www.juso.go.kr/addrlink/addrLinkUrl.do\";\r\n");
      out.write("\t\t\tdocument.form1.submit();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\topenURL = opener.location.href;\r\n");
      out.write("\t\t\tif(openURL.lastIndexOf(\"?method=\") > 0) {\r\n");
      out.write("\t\t\t\tstart_pos = openURL.lastIndexOf(\"?method=\");\r\n");
      out.write("\t\t\t\topenURL = openURL.substring(start_pos + 8, start_pos + 16);\r\n");
      out.write("\t\t\t}else if(openURL.lastIndexOf(\"?reqUrl=\") > 0) {\r\n");
      out.write("\t\t\t\tstart_pos = openURL.lastIndexOf(\"?reqUrl=\");\r\n");
      out.write("\t\t\t\topenURL = openURL.substring(start_pos + 23, start_pos + 31);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\topener.document.saveForm.zip_no.value = '");
      out.print(zipNo);
      out.write("';\r\n");
      out.write("\t\t\topener.document.saveForm.addr.value = '");
      out.print(roadFullAddr);
      out.write("';\r\n");
      out.write("\r\n");
      out.write("\t\t\twindow.close();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<form id=\"form\" name=\"form1\" method=\"post\">\r\n");
      out.write("<input type=\"hidden\" id=\"confmKey\" name=\"confmKey\" value=\"\"/>\r\n");
      out.write("<input type=\"hidden\" id=\"returnUrl\" name=\"returnUrl\" value=\"\"/>\r\n");
      out.write("<input type=\"hidden\" id=\"encodingType\" name=\"encodingType\" value=\"UTF-8\"/>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
