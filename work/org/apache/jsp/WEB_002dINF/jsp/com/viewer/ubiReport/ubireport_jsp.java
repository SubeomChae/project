/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-09-20 08:16:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.com.viewer.ubiReport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;

public final class ubireport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN' 'http://www.w3.org/TR/html4/loose.dtd'>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
  String report_id = box.get("report_id");
	String params    = box.get("params"); 
      out.write("\r\n");
      out.write("<!--[if IE]><script src='./js/ubiexcanvas.js'></script><![endif]-->\r\n");
      out.write("<script src='/com/viewer/ubiReport/js/ubihtml.js'></script>\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("<!--\r\n");
      out.write("\t/* 기본 정보 */\r\n");
      out.write("\tvar protocol = self.location.protocol;\t\t\t\t\t\t\t// 요청 Protocol\r\n");
      out.write("\tvar host = self.location.host;\t\t\t\t\t\t\t\t\t// ip:port\r\n");
      out.write("\tvar app = \"\";\t\t\t\t\t\t\t\t\t\t\t\t// Web Application 명\r\n");
      out.write("\tvar url = protocol + \"//\" + host + (app==\"\"?\"\":(\"/\" + app));\t// Web Application URL\r\n");
      out.write("\t\r\n");
      out.write("\tvar htmlViewer = null;\r\n");
      out.write("\r\n");
      out.write("/* 뷰어 Param 정보 */ var pKey = '");
      out.print(session.getId());
      out.write("'; var pServerUrl = url + '/UbiServer'; var pTimeout = '600000'; var pResId = 'UBIHTML'; var pResUrl = url + '/com/viewer/ubiReport/js/'; var pToolbar = 'true'; var pScale = '-9999'; var pDivId = 'UbiHTMLViewer'; var pIsStreaming = 'true'; var pScrollpage = 'true';\r\n");
      out.write("\r\n");
      out.write("\tvar pJrf = '");
      out.print(report_id);
      out.write("';\r\n");
      out.write("\tvar pArg = 'P_DBO#");
      out.print(box.get("dbo"));
      out.write('#');
      out.print(StringUtil.replace(params,"!","#"));
      out.write("';\r\n");
      out.write("\tvar wGap = 10;\t// 가로 크기 조정.\r\n");
      out.write("\tvar hGap = 10;\t// 세로 크기 조정.\r\n");
      out.write("\t// 미리보기\r\n");
      out.write("\tfunction UbiLoadReport() {\r\n");
      out.write("\t\tvar w = ((self.innerWidth || (document.documentElement && document.documentElement.clientWidth) || document.body.clientWidth)) - wGap;\r\n");
      out.write("\t\tvar h = ((self.innerHeight || (document.documentElement && document.documentElement.clientHeight) || document.body.clientHeight)) - hGap;\r\n");
      out.write("\t\tdocument.getElementById(pDivId).style.width = w + \"px\";\r\n");
      out.write("\t\tdocument.getElementById(pDivId).style.height = h + \"px\";\r\n");
      out.write("\r\n");
      out.write("\t\thtmlViewer = new UbiViewer( {\r\n");
      out.write("\r\n");
      out.write("\t\t\tkey : pKey,\r\n");
      out.write("\t\t\tubiserverurl : pServerUrl,\r\n");
      out.write("\t\t\ttimeout : pTimeout,\r\n");
      out.write("\t\t\tresid : pResId,\r\n");
      out.write("\t\t\tresource : pResUrl,\r\n");
      out.write("\t\t\ttoolbar : pToolbar,\r\n");
      out.write("\t\t\tscale : pScale,\r\n");
      out.write("\t\t\tdivid : pDivId,\r\n");
      out.write("\t\t\tisStreaming : pIsStreaming,\r\n");
      out.write("\t\t\tscrollpage : pScrollpage,\r\n");
      out.write("\r\n");
      out.write("\t\t\tjrffile : pJrf,\r\n");
      out.write("\t\t\targ : pArg\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\thtmlViewer.showReport();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 브라우저 리사이즈 처리\r\n");
      out.write("\tfunction UbiResize() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar w = ((self.innerWidth || (document.documentElement && document.documentElement.clientWidth) || document.body.clientWidth)) - wGap;\r\n");
      out.write("\t\tvar h = ((self.innerHeight || (document.documentElement && document.documentElement.clientHeight) || document.body.clientHeight)) - hGap;\r\n");
      out.write("\t\tdocument.getElementById(pDivId).style.width = w + \"px\";\r\n");
      out.write("\t\tdocument.getElementById(pDivId).style.height = h + \"px\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tUbiLoadReport()\r\n");
      out.write("\t});\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("\t<div id=\"UbiHTMLViewer\" onresize='UbiResize()' style='border:solid 1px #808080;'></div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
