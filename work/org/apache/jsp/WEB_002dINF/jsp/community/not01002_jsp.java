/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-09-10 00:34:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.community;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;

public final class not01002_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.cbiz.Box obox = null;
      obox = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("obox", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (obox == null){
        obox = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("obox", obox, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.ubiz.mapper.ent.SesUserEntity uSesEnt = null;
      synchronized (session) {
        uSesEnt = (egovframework.ubiz.mapper.ent.SesUserEntity) _jspx_page_context.getAttribute("uSesEnt", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (uSesEnt == null){
          uSesEnt = new egovframework.ubiz.mapper.ent.SesUserEntity();
          _jspx_page_context.setAttribute("uSesEnt", uSesEnt, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!-- 새 쪽지 쓰기  -->\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("\tvar emplCnt = 0;\r\n");
      out.write("\tfunction goAddEmpl(id) {\r\n");
      out.write("\t\tvar arr = id.split('|');\r\n");
      out.write("\t\tif(isEmpty(document.main.emplList)) {\r\n");
      out.write("\t\t\talert('받는사람이 선택되지 않았습니다.');\r\n");
      out.write("\t\t\tdocument.main.emplList.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else {\r\n");
      out.write("\t\t\tif(document.main.send_id.value == arr[0]) {\r\n");
      out.write("\t\t\t\talert('본인을 수신자로 지정할 수 없습니다.');\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0; i <= emplCnt; i++) {\r\n");
      out.write("\t\t\t\tif(isObject('receive_id'+i)) {\r\n");
      out.write("\t\t\t\t\tif(document.all['receive_id'+i].value == arr[0]) {\r\n");
      out.write("\t\t\t\t\t\talert('이미 지정된 수신자입니다.');\r\n");
      out.write("\t\t\t\t\t\tdocument.main.emplList.focus();\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar tbody = document.getElementById('MyTable').getElementsByTagName(\"TBODY\")[0];\r\n");
      out.write("\t\tvar row = document.createElement(\"TR\");\r\n");
      out.write("        row.id = \"receiveEmpRow\"+emplCnt;  row.align=\"left\";\r\n");
      out.write("\t\tvar td0 = document.createElement(\"TD\"); td0.style.border=\"none\";\r\n");
      out.write("\t\ttd0.innerHTML = getSelectedText(document.main.emplList) + ' ' + arr[1] + '  '\r\n");
      out.write("\t\t\t\t\t  + \"<button type=button class=btn btn-primary btn-table marR0 onclick=removeNode('receiveEmpRow\"+emplCnt+\"');>삭제</button>\"\r\n");
      out.write("\t\t\t\t\t  + \"<input type='hidden' name='receive_id\"+emplCnt+\"' value='\"+arr[0]+\"'>\";\r\n");
      out.write("\t\trow.appendChild(eval(\"td0\"));\r\n");
      out.write("\t\ttbody.appendChild(row);\r\n");
      out.write("\t\templCnt++;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\tfunction goSend() {\r\n");
      out.write("\t\tif(formValidate(\"#main\")) {\r\n");
      out.write("\t\t\tvar receive_id = '';\r\n");
      out.write("\t\t\tfor(var i=0; i < emplCnt; i++) {\r\n");
      out.write("\t\t\t\tif(isObject('receive_id'+i) && !isEmpty(document.all['receive_id'+i])) {\r\n");
      out.write("\t\t\t\t\treceive_id += document.all['receive_id'+i].value + ';';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(receive_id == '') {\r\n");
      out.write("\t\t\t\talert('받는사람이 지정되지 않았습니다.');\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(document.main.talk_body.value.length < 10) {\r\n");
      out.write("\t\t\t\talert('쪽지 내용은 10자 이상으로 입력하셔야 합니다.');\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(confirm('발송하시겠습니까?')) {\r\n");
      out.write("\t\t\t\tremoveMask(\"#main\");\r\n");
      out.write("\t\t\t\tdocument.main.receive_id.value = receive_id;\r\n");
      out.write("\t\t\t\tdocument.main.action = 'not01002_insert.do';\r\n");
      out.write("\t\t\t\tdocument.main.target = \"_self\";\r\n");
      out.write("\t\t\t\tdocument.main.submit();\r\n");
      out.write("\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\talert(\"발송되었습니다\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction removeNode(id) {\r\n");
      out.write("\t\tvar cNode = document.getElementById(id);\r\n");
      out.write("\t\tcNode.parentNode.removeChild(cNode);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction changeDeptCd(dept_cd) {\r\n");
      out.write("\t\tdocument.main.emplList.options.length = 1;\r\n");
      out.write("\t\tif(dept_cd != '') {\r\n");
      out.write("\t\t\tajaxProcJsonList(\"PR_INSTB_EMPL01_LIST@LIST004\", {'param01' : dept_cd}, function(rtn) {\r\n");
      out.write("\t\t\t\tfor(var i=0; i < rtn.data.length; i++) {\r\n");
      out.write("\t\t       \t\tvar pos = document.main.emplList.options.length++;\r\n");
      out.write("\t\t       \t\tdocument.main.emplList.options[pos].value = rtn.data[i].empl_no + '|' + rtn.data[i].position_nm;\r\n");
      out.write("\t\t       \t\tdocument.main.emplList.options[pos].text = rtn.data[i].empl_nm;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("// \tfunction __changeDeptCd_post(rtn) { \r\n");
      out.write("//        \tfor(var i=0; i < rtn.data.length; i++) {\r\n");
      out.write("//        \t\tvar pos = document.main.emplList.options.length++;\r\n");
      out.write("//        \t\tdocument.main.emplList.options[pos].value = rtn.data[i].empl_no + '|' + rtn.data[i].position_nm;\r\n");
      out.write("//        \t\tdocument.main.emplList.options[pos].text = rtn.data[i].empl_nm;\r\n");
      out.write("// \t\t}\r\n");
      out.write("// \t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t");
 if(!obox.get("empl_no").equals("")) { 
      out.write("\r\n");
      out.write("\t\tvar tbody = document.getElementById('MyTable').getElementsByTagName(\"TBODY\")[0];\r\n");
      out.write("\t\tvar row = document.createElement(\"TR\");\r\n");
      out.write("        row.id = \"receiveEmpRow\"+emplCnt;  row.align=\"left\";\r\n");
      out.write("\t\tvar td0 = document.createElement(\"TD\"); td0.style.border=\"none\";\r\n");
      out.write("\t\ttd0.innerHTML = \"");
      out.print(obox.get("dept_nm"));
      out.write(' ');
      out.print(obox.get("empl_nm"));
      out.write(' ');
      out.print(obox.get("position_nm"));
      out.write(" \"\r\n");
      out.write("\t\t\t\t\t  + \"<button type=button class=btn btn-primary btn-table marR0 onclick=removeNode('receiveEmpRow\"+emplCnt+\"');>삭제</button>\"\r\n");
      out.write("\t\t\t\t\t  + \"<input type='hidden' name='receive_id\"+emplCnt+\"' value='");
      out.print(obox.get("empl_no"));
      out.write("'>\";\r\n");
      out.write("\t\trow.appendChild(eval(\"td0\"));\r\n");
      out.write("\t\ttbody.appendChild(row);\r\n");
      out.write("\t\templCnt++;\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$(\".page-logo-text\").html(\"쪽지\");\t\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form  id=\"main\" name=\"main\" method=\"post\" action=\"\" class=\"fType\" style=\"margin:0px\">\r\n");
      out.write("<input type=\"hidden\" name=\"send_id\" \tvalue=\"");
      out.print(uSesEnt.empl_no);
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"receive_id\" \tvalue=\"\">\r\n");
      out.write("\t\r\n");
      out.write("\t<table class=\"search-panel table table-bordered table-cover marB0\">\r\n");
      out.write("\t\t<tr height=\"180\"> \r\n");
      out.write("\t\t\t<th>쪽지내용<br>(10자 이상)</th>\r\n");
      out.write("\t\t\t<td colspan=\"3\"><textarea name=\"talk_body\" class=\"form-control\" style=\"width:100%;height:220;border:none;\"></textarea></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"28\"> \r\n");
      out.write("\t\t\t<th>받는사람</th>\r\n");
      out.write("\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t<select name=\"deptList\" title=\"부서명\" class=\"bs-select form-control\" style=\"width:140px;\"\" onChange=\"changeDeptCd(this.value)\">\r\n");
      out.write("\t\t\t\t\t<option value=''>선택</option>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(CodeUtil.optList("PR_INSTB_DEPT01_LIST","LISTCODE","","","","","","", uSesEnt.dbo));
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t  \t\t<select name=\"emplList\" title=\"성명\" class=\"bs-select form-control\" style=\"width:80px;\" onChange=\"goAddEmpl(this.value)\">\r\n");
      out.write("\t\t\t\t\t<option value=''>선택</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<div style='width:100%;height:100px;overflow-y:scroll;'>\r\n");
      out.write("\t\t\t\t\t<table id='MyTable' width=\"100%\" border=\"0\">\r\n");
      out.write("\t\t\t\t\t\t<tr><td style=\"border:none\"></td></tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t<div class=\"table-bottom-control\">\r\n");
      out.write("\t\t<span style=\"width:100%;\">\r\n");
      out.write("\t\t\t<span style=\"float:right;\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn dark marR5\" onclick=\"goSend();\"><img src=\"/com/img/ico_btn_confirm.png\">보내기</button>\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
