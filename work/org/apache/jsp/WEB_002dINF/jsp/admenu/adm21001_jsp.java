/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-09-18 07:54:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.admenu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;
import java.util.*;
import java.util.Calendar;

public final class adm21001_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

	
	int monthLength = 0;
	int yyyy=0;
	int mm=0;
	int dd=0;
	int dayOfWeek=0;
	String strToday;
	HashMap holidays;
	Calendar today = null;

	void setToday(Calendar c){
		today = c;
		yyyy = today.get(Calendar.YEAR);
		mm = today.get(Calendar.MONTH)+1;
		dd = today.get(Calendar.DATE);
		setStrToday(new Integer(yyyy).toString() + StringUtil.lpad(new Integer(mm).toString(),"0",2) + StringUtil.lpad(new Integer(dd).toString(),"0",2));
		today.set(Calendar.DAY_OF_MONTH, 1);
		dayOfWeek = today.get(Calendar.DAY_OF_WEEK);
	}

	void setOtherToday(Calendar c, String y, String m, String d){
		today = c;
		today.set(Calendar.YEAR, Integer.parseInt(y));
		today.set(Calendar.MONTH, Integer.parseInt(m)-1);

		today.set(Calendar.DAY_OF_MONTH, 1);
		yyyy = today.get(Calendar.YEAR);
		mm = today.get(Calendar.MONTH)+1;	
		dd = today.get(Calendar.DATE);
		setStrToday(new Integer(yyyy).toString() + StringUtil.lpad(new Integer(mm).toString(),"0",2) + StringUtil.lpad(d,"0",2));
		dayOfWeek = today.get(Calendar.DAY_OF_WEEK);
	}

	int getMonthDay(int yyyy, int mm){
		if(mm == 2)
			monthLength = getLeapYearFebruary(yyyy);
		else if(mm == 4 || mm == 6 || mm == 9 || mm == 11)
			monthLength = 30;
		else
			monthLength = 31;

		return monthLength;
	}

	int getLeapYearFebruary(int yyyy){
		if((yyyy % 4 == 0 && yyyy % 100 != 0) || yyyy % 400 == 0)
			return 29;
		else return 28;
	}

	int getIntYear(){
		return yyyy;
	}

	int getIntMonth(){
		return mm;
	}

	public int getIntDay(){
		return dd;
	}

	public int getDayOfWeek(){
		return dayOfWeek;
	}

	String getStrToday(){
		return strToday; 
	}

	void setStrToday(String str){
		this.strToday = str;
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/com/calendar/calendar.jsp", Long.valueOf(1567159650361L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.cbiz.RsWrapper rsWp = null;
      rsWp = (egovframework.cbiz.RsWrapper) _jspx_page_context.getAttribute("rsWp", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (rsWp == null){
        rsWp = new egovframework.cbiz.RsWrapper();
        _jspx_page_context.setAttribute("rsWp", rsWp, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.ubiz.mapper.ent.SesUserEntity uSesEnt = null;
      synchronized (session) {
        uSesEnt = (egovframework.ubiz.mapper.ent.SesUserEntity) _jspx_page_context.getAttribute("uSesEnt", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (uSesEnt == null){
          uSesEnt = new egovframework.ubiz.mapper.ent.SesUserEntity();
          _jspx_page_context.setAttribute("uSesEnt", uSesEnt, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
	Calendar calendar = Calendar.getInstance();
	setOtherToday(calendar, box.get("year"), box.get("month"), box.get("day"));
	String strToday = getStrToday();
	int intYear  = box.getInt("year");
	int intMonth = box.getInt("month");
	int intDay 	 = box.getInt("day");
	int dayOfWeek = getDayOfWeek();
	int monthLength = getMonthDay(intYear, intMonth);

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- 월간주요일정관리 -->\r\n");
      out.write("<link href=\"/com/calendar/css/calendar.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
 if(!box.get("ajax_yn").equals("Y")) { 
      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("\tfunction goSearch() {\r\n");
      out.write("\t\tdocument.main.std_ym.value = document.main.std_yy.value + document.main.std_mm.value\r\n");
      out.write("\t\tajaxReplaceForm(\"adm21001_list.do\", \"#main\", \"#divListData\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction goWork(day) {\r\n");
      out.write("\t\tif(day.length == 1) { day = '0' + day; }\r\n");
      out.write("\t\tvar sys_ymd = document.main.std_yy.value+document.main.std_mm.value+day\r\n");
      out.write("\t\tvar param = \"sys_ymd=\"+sys_ymd;\r\n");
      out.write("\t\tajaxReplace(\"adm21002_edit.do\", param, \"#dialog-form\", function() {\r\n");
      out.write("\t\t\t$('#dialog-form').modal('show');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script> \r\n");
      out.write("\r\n");
      out.write("<form id=\"main\" name=\"main\" method=\"post\" action=\"\" class=\"fType\" style=\"margin:0px\">\r\n");
      out.write("<input type=\"hidden\" name=\"std_ym\" \t\tvalue=\"");
      out.print(box.get("std_ym"));
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"sys_ymd\" \tvalue=\"\">\r\n");
      out.write("\t<h1 class=\"page-title\">월간 주요일정</h1>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"form-inline marB10\">\r\n");
      out.write("\t\t<div class=\"table-top-control\">\r\n");
      out.write("\t\t\t<div class=\"notice-view\">\r\n");
      out.write("\t\t\t  \t<span style=\"color:#01a1db;\">일자를 클릭</span>해서 해당 일자의 주요일정을 등록할 수있습니다.\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-inline f-right\">\r\n");
      out.write("\t\t\t\t<select name=\"std_yy\" class=\"bs-select form-control\" style=\"width:90px;\" onchange=\"goSearch();\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(DateUtil.getYearOptionTag(box.get("std_ym").substring(0,4),"2010",DateUtil.nextYear(),"desc","년"));
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<select name=\"std_mm\" class=\"bs-select form-control\" style=\"width:90px\" onChange=\"goSearch();\">\r\n");
      out.write("\t       \t\t\t");
      out.print(DateUtil.getMonthOptionTag(box.get("std_ym").substring(4),"월"));
      out.write("\r\n");
      out.write("\t\t\t\t</select> \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("<div id=\"divListData\" class=\"contentsRow\">\t\r\n");
 } 
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t<table class=\"table table-bordered order-column table-cover\" style=\"height:calc(100vh - 100px);\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"background-color:#FAF2F2; font-size:18px\"><font color=\"#740000\">일</font></td>\r\n");
      out.write("\t\t\t<th style=\"font-size:18px\">월</th>\r\n");
      out.write("\t\t\t<th style=\"font-size:18px\">화</th>\r\n");
      out.write("\t\t\t<th style=\"font-size:18px\">수</th>\r\n");
      out.write("\t\t\t<th style=\"font-size:18px\">목</th>\r\n");
      out.write("\t\t\t<th style=\"font-size:18px\">금</th>\r\n");
      out.write("\t\t\t<td style=\"background-color:#E7F9FF; font-size:18px\"><font color=\"#1B1464\">토</font></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
  String arr[] = {"N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N"};
				for(int i=0; i < rsWp.getLength(); i++) {
					arr[rsWp.getInt("sys_dd",i)] = rsWp.get("holiday_yn",i) + rsWp.get("etc_remark",i);
				}
				int index = (dayOfWeek*-1) + 2;
				while(index <= monthLength){
					out.println("<tr class='t-center'>");
					for(int j=0; j <= 6; j++){
						if(index > 0 && index <= monthLength) {
							if(j == 0 ) { // 일요일 or 월간주요일정
								out.print("<td width='14%' class='schedule_number_red'");
							}else if(j == 6) { // 토요일
								out.print("<td width='14%' class='schedule_number_blue'");
							}else {
								out.print("<td width='14%' class='schedule_number_gray'");
							}
							String dateStr = " onmouseover=this.style.backgroundColor='#F3F0D2' onmouseout=this.style.backgroundColor=''>";
							if(uSesEnt.use_auth.startsWith("S")) {
								dateStr += "<a href=\"javascript:goWork('"+index+"','"+j+"');\" style=font-size:16px;font-weight:bold;>" + index + "</a><br><br>";
							}else {
								dateStr += "" + index + "<br><br>";
							}
							if(!arr[index].equals("")) {
								dateStr += arr[index].substring(1);
							}else {
								dateStr += "&nbsp;";
							}
							out.println(dateStr);
							out.println("</td>");
						}else {
							out.println("<td></td>");
						}
						index++;
					}
					out.println("</tr>");
				}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
 if(!box.get("ajax_yn").equals("Y")) { 
      out.write("\t\r\n");
      out.write("</div>\r\n");
 } 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
