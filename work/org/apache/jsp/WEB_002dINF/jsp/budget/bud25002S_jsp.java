/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2019-08-29 04:11:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.budget;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import egovframework.cbiz.*;
import egovframework.cbiz.util.*;

public final class bud25002S_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("egovframework.cbiz");
    _jspx_imports_packages.add("egovframework.cbiz.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      egovframework.cbiz.Box box = null;
      box = (egovframework.cbiz.Box) _jspx_page_context.getAttribute("box", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (box == null){
        box = new egovframework.cbiz.Box();
        _jspx_page_context.setAttribute("box", box, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.cbiz.RsWrapper lineWp = null;
      lineWp = (egovframework.cbiz.RsWrapper) _jspx_page_context.getAttribute("lineWp", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (lineWp == null){
        lineWp = new egovframework.cbiz.RsWrapper();
        _jspx_page_context.setAttribute("lineWp", lineWp, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      egovframework.ubiz.mapper.ent.SesUserEntity uSesEnt = null;
      synchronized (session) {
        uSesEnt = (egovframework.ubiz.mapper.ent.SesUserEntity) _jspx_page_context.getAttribute("uSesEnt", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (uSesEnt == null){
          uSesEnt = new egovframework.ubiz.mapper.ent.SesUserEntity();
          _jspx_page_context.setAttribute("uSesEnt", uSesEnt, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>그래프분석(목적사업 집행추이)</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/com/css/Nwagon.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/com/js/Nwagon.js\"></script>\r\n");
      out.write("<form name=\"main\" method=\"post\" action=\"\" class=\"fType\" style=\"margin:0px\">\r\n");
      out.write("<table class=\"search-panel table table-bordered\">\r\n");
      out.write("\t<tr> \r\n");
      out.write("\t\t<td style=\"border:none\">\r\n");
      out.write("\t\t\t<div id=\"divChart3\" style=\"overflow-x:hidden;overflow-y:hidden;\"></div>\r\n");
      out.write("\t\t\t<script language=\"javascript\">\r\n");
      out.write("\t\t\t");
  String fields = ""; int colLength = 0; float maxValue = 0; 
				String ArrCol[] = {"","","","","","","","","","","","","","","","","",""};
				if(box.get("param01").equals("1")) {
					for(int i=0; i <= box.getInt("param03")-box.getInt("param02"); i++) {
						ArrCol[i] = String.valueOf(i+box.getInt("param02"));
						colLength++;
					}
				}else {
					for(int i=0; i < 12; i++) {
						ArrCol[i] = String.valueOf(i+1); 
						colLength++;
					}
				}
				
				String ArrVal[] = new String[colLength];
				for(int i=0; i < colLength; i++) { 
					ArrVal[i] = "[";
				}
				
				for(int i=0; i < lineWp.getLength(); i++) { if(!lineWp.get("code1",i).equals("목적사업")) { continue; }
					fields += (!fields.equals("") ? ",":"") + "'" + lineWp.get("code2",i) + "'";
					if(maxValue < lineWp.getFloat("max_value",i)) { maxValue = lineWp.getFloat("max_value",i); } 
					for(int j=0; j < colLength; j++) {
						ArrVal[j] += (!StringUtil.replace(ArrVal[j],"[","").equals("") ? ",":"") + lineWp.get("data"+ArrCol[j],i);
					}
				}
				for(int i=0; i < colLength; i++) { 
					ArrVal[i] += "]";
				} 
      out.write("\r\n");
      out.write("\t\t\t\tvar options = {\r\n");
      out.write("\t\t\t\t\t'legend': {\r\n");
      out.write("\t\t\t            names: [\r\n");
      out.write("\t\t\t            ");
 if(box.get("param01").equals("1")) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
 for(int i=box.getInt("param02"); i <= box.getInt("param03"); i++) { 
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t'");
      out.print(i);
      out.write('\'');
      out.print(box.get("param03").equals(String.valueOf(i))?"":",");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
 }else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
 for(int i=1; i <= 12; i++) { 
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t'");
      out.print(box.getInt("param02"));
      out.write('.');
      out.print(StringUtil.lpad(String.valueOf(i),"0",2));
      out.write('\'');
      out.print(String.valueOf(i).equals("12")?"":",");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t],\r\n");
      out.write("\t\t\t            hrefs: []\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        'dataset': {\r\n");
      out.write("\t\t\t            values: [\r\n");
      out.write("\t\t\t\t\t\t");
 for(int i=0; i < ArrVal.length; i++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(ArrVal[i]);
      out.print(String.valueOf(i).equals(String.valueOf(ArrVal.length-1))?"":",");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t            \t\t\t],\r\n");
      out.write("\t\t\t            colorset: ['#DC143C', '#FF8C00', '#30a1ce', '#2eb400', '#9f9f9f', '#aa7777', '#ffcc33', '#e89800', '#ff8c00', '#cc79a7', '#696a72', '#000000'],\r\n");
      out.write("\t\t\t            fields:[");
      out.print(fields);
      out.write("]\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        'chartDiv': 'divChart3', 'chartType': 'line', 'chartSize': { width: 1150, height: 500 },\r\n");
      out.write("\t\t\t        'minValue' : 0, 'maxValue': ");
      out.print(maxValue);
      out.write(", 'increment': Math.ceil(");
      out.print(maxValue);
      out.write("/10), 'isGuideLineNeeded' : true\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tNwagon.chart(options);\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
